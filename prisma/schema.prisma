// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  email     String     @unique
  password  String
  admin     Boolean    @default(false)
  userGames UserGame[]
}

model Game {
  id            String       @id @default(uuid())
  name          String
  main          Int?
  extras        Int?
  completionist Int?
  description   String?
  usReleaseDate DateTime?
  euReleaseDate DateTime?
  jpReleaseDate DateTime?
  publisher     Publisher?   @relation(fields: [publisherId], references: [id])
  publisherId   String?
  developer     Developer?   @relation(fields: [developerId], references: [id])
  developerId   String?
  userGames     UserGame[]
  gameSystems   GameSystem[]
  gameGenres    GameGenre[]
}

model System {
  id          String       @id @default(uuid())
  name        String       @unique
  company     Company      @relation(fields: [companyId], references: [id])
  companyId   String
  usReleaseDate DateTime?
  euReleaseDate DateTime?
  jpReleaseDate DateTime?
  gameSystems GameSystem[]
}

model Company {
  id      String   @id @default(uuid())
  name    String   @unique
  foundingDate DateTime?
  systems System[]
}

model Genre {
  id         String      @id @default(uuid())
  name       String
  gameGenres GameGenre[]
}

model Publisher {
  id    String @id @default(uuid())
  name  String
  foundingDate DateTime?
  games Game[]
}

model Developer {
  id    String @id @default(uuid())
  name  String
  foundingDate DateTime?
  games Game[]
}

model UserGame {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  game          Game           @relation(fields: [gameId], references: [id])
  gameId        String
  completedTime DateTime?
  completed     Boolean        @default(false)
  userSystem    UserGameSystem @relation(fields: [userSystemId], references: [id])
  userSystemId  String
}

model UserGameSystem {
  id           String     @id @default(uuid())
  userGame     UserGame[]
  gameSystemId String
  gameSystem   GameSystem @relation(fields: [gameSystemId], references: [id])
}

model GameSystem {
  id       String           @id @default(uuid())
  system   System           @relation(fields: [systemId], references: [id])
  systemId String
  game     Game             @relation(fields: [gameId], references: [id])
  gameId   String
  users    UserGameSystem[]
}

model GameGenre {
  id      String @id @default(uuid())
  genre   Genre  @relation(fields: [genreId], references: [id])
  genreId String
  game    Game   @relation(fields: [gameId], references: [id])
  gameId  String
}
